pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
        APP_DIR = "/var/lib/jenkins/workspace/ultimate-pipeline/Jenkins-Zero-To-Hero/java-maven-sonar-argocd-helm-k8s/spring-boot-app"
    }

    stages {

        stage('Clean Workspace') {
            steps {
                echo 'Cleaning target folder before starting build...'
                sh "rm -rf ${APP_DIR}/target"
            }
        }

        stage('Build and Test') {
            agent {
                docker {
                    image 'maven:3.8.3-openjdk-17'
                    args '--user root'
                }
            }
            steps {
                echo 'Running Maven clean package...'
                sh "cd ${APP_DIR} && mvn clean package"
            }
        }

        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://3.94.253.200:9000"
            }
            agent {
                docker {
                    image 'maven:3.8.3-openjdk-17'
                    args '--user root'
                }
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh "cd ${APP_DIR} && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}"
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    echo 'Building Docker image from host environment with sudo...'
                    sh """
                        cd ${APP_DIR}
                        sudo docker build -t ${DOCKER_IMAGE} .
                    """

                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
                GIT_USER_NAME = "iam-veeramalla"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh """
                        cd /var/lib/jenkins/workspace/ultimate-pipeline/Jenkins-Zero-To-Hero
                        git config user.email "sandeepchauhan4681@gmail.com"
                        git config user.name "Sandeep Chauhan"
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    """
                }
            }
        }
    }
}
